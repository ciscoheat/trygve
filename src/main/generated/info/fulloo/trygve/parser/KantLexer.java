// Generated from src/main/java/info/fulloo/trygve/parser/Kant.g4 by ANTLR 4.5.1

    package info.fulloo.trygve.parser;

import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class KantLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.5.1", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, T__11=12, T__12=13, T__13=14, T__14=15, T__15=16, T__16=17, 
		T__17=18, T__18=19, T__19=20, T__20=21, T__21=22, T__22=23, T__23=24, 
		T__24=25, T__25=26, T__26=27, T__27=28, T__28=29, T__29=30, T__30=31, 
		T__31=32, STRING=33, INTEGER=34, FLOAT=35, BOOLEAN=36, SWITCH=37, CASE=38, 
		DEFAULT=39, BREAK=40, CONTINUE=41, RETURN=42, REQUIRES=43, NEW=44, CLONE=45, 
		NULL=46, CONST=47, LOGICAL_NOT=48, POW=49, BOOLEAN_SUMOP=50, BOOLEAN_MULOP=51, 
		ABELIAN_SUMOP=52, ABELIAN_MULOP=53, MINUS=54, PLUS=55, LT=56, GT=57, LOGICAL_NEGATION=58, 
		ABELIAN_INCREMENT_OP=59, JAVA_ID=60, INLINE_COMMENT=61, C_COMMENT=62, 
		WHITESPACE=63, ASSIGN=64;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
		"T__17", "T__18", "T__19", "T__20", "T__21", "T__22", "T__23", "T__24", 
		"T__25", "T__26", "T__27", "T__28", "T__29", "T__30", "T__31", "STRING", 
		"INTEGER", "FLOAT", "BOOLEAN", "SWITCH", "CASE", "DEFAULT", "BREAK", "CONTINUE", 
		"RETURN", "REQUIRES", "NEW", "CLONE", "NULL", "CONST", "LOGICAL_NOT", 
		"POW", "BOOLEAN_SUMOP", "BOOLEAN_MULOP", "ABELIAN_SUMOP", "ABELIAN_MULOP", 
		"MINUS", "PLUS", "LT", "GT", "LOGICAL_NEGATION", "ABELIAN_INCREMENT_OP", 
		"JAVA_ID", "INLINE_COMMENT", "C_COMMENT", "WHITESPACE", "ASSIGN"
	};

	private static final String[] _LITERAL_NAMES = {
		null, "'context'", "'{'", "'}'", "'class'", "'extends'", "'interface'", 
		"'implements'", "','", "'role'", "'['", "']'", "';'", "'stageprop'", "'('", 
		"')'", "'public'", "'private'", "'int'", "'double'", "'char'", "'String'", 
		"'!='", "'=='", "'>='", "'<='", "'.'", "'if'", "'else'", "'for'", "':'", 
		"'while'", "'do'", null, null, null, null, "'switch'", "'case'", "'default'", 
		"'break'", "'continue'", "'return'", "'requires'", "'new'", "'clone'", 
		"'null'", "'const'", null, "'**'", null, "'&&'", null, null, "'-'", "'+'", 
		"'<'", "'>'", null, null, null, null, null, null, "'='"
	};
	private static final String[] _SYMBOLIC_NAMES = {
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, null, null, "STRING", "INTEGER", 
		"FLOAT", "BOOLEAN", "SWITCH", "CASE", "DEFAULT", "BREAK", "CONTINUE", 
		"RETURN", "REQUIRES", "NEW", "CLONE", "NULL", "CONST", "LOGICAL_NOT", 
		"POW", "BOOLEAN_SUMOP", "BOOLEAN_MULOP", "ABELIAN_SUMOP", "ABELIAN_MULOP", 
		"MINUS", "PLUS", "LT", "GT", "LOGICAL_NEGATION", "ABELIAN_INCREMENT_OP", 
		"JAVA_ID", "INLINE_COMMENT", "C_COMMENT", "WHITESPACE", "ASSIGN"
	};
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public KantLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "Kant.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\2B\u01e0\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"+
		",\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64\t"+
		"\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:\4;\t;\4<\t<\4=\t="+
		"\4>\t>\4?\t?\4@\t@\4A\tA\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\2\3\3\3\3\3\4\3"+
		"\4\3\5\3\5\3\5\3\5\3\5\3\5\3\6\3\6\3\6\3\6\3\6\3\6\3\6\3\6\3\7\3\7\3\7"+
		"\3\7\3\7\3\7\3\7\3\7\3\7\3\7\3\b\3\b\3\b\3\b\3\b\3\b\3\b\3\b\3\b\3\b\3"+
		"\b\3\t\3\t\3\n\3\n\3\n\3\n\3\n\3\13\3\13\3\f\3\f\3\r\3\r\3\16\3\16\3\16"+
		"\3\16\3\16\3\16\3\16\3\16\3\16\3\16\3\17\3\17\3\20\3\20\3\21\3\21\3\21"+
		"\3\21\3\21\3\21\3\21\3\22\3\22\3\22\3\22\3\22\3\22\3\22\3\22\3\23\3\23"+
		"\3\23\3\23\3\24\3\24\3\24\3\24\3\24\3\24\3\24\3\25\3\25\3\25\3\25\3\25"+
		"\3\26\3\26\3\26\3\26\3\26\3\26\3\26\3\27\3\27\3\27\3\30\3\30\3\30\3\31"+
		"\3\31\3\31\3\32\3\32\3\32\3\33\3\33\3\34\3\34\3\34\3\35\3\35\3\35\3\35"+
		"\3\35\3\36\3\36\3\36\3\36\3\37\3\37\3 \3 \3 \3 \3 \3 \3!\3!\3!\3\"\3\""+
		"\3\"\3\"\7\"\u011d\n\"\f\"\16\"\u0120\13\"\3\"\3\"\3#\6#\u0125\n#\r#\16"+
		"#\u0126\3#\7#\u012a\n#\f#\16#\u012d\13#\3#\5#\u0130\n#\3$\7$\u0133\n$"+
		"\f$\16$\u0136\13$\3$\5$\u0139\n$\3$\3$\7$\u013d\n$\f$\16$\u0140\13$\3"+
		"%\3%\3%\3%\3%\3%\3%\3%\3%\5%\u014b\n%\3&\3&\3&\3&\3&\3&\3&\3\'\3\'\3\'"+
		"\3\'\3\'\3(\3(\3(\3(\3(\3(\3(\3(\3)\3)\3)\3)\3)\3)\3*\3*\3*\3*\3*\3*\3"+
		"*\3*\3*\3+\3+\3+\3+\3+\3+\3+\3,\3,\3,\3,\3,\3,\3,\3,\3,\3-\3-\3-\3-\3"+
		".\3.\3.\3.\3.\3.\3/\3/\3/\3/\3/\3\60\3\60\3\60\3\60\3\60\3\60\3\61\3\61"+
		"\3\62\3\62\3\62\3\63\3\63\3\63\5\63\u019d\n\63\3\64\3\64\3\64\3\65\3\65"+
		"\3\66\3\66\3\67\3\67\38\38\39\39\3:\3:\3;\3;\3<\3<\3<\3<\5<\u01b4\n<\3"+
		"=\5=\u01b7\n=\3=\7=\u01ba\n=\f=\16=\u01bd\13=\3>\3>\3>\3>\7>\u01c3\n>"+
		"\f>\16>\u01c6\13>\3>\3>\3?\3?\3?\3?\7?\u01ce\n?\f?\16?\u01d1\13?\3?\3"+
		"?\3?\3?\3?\3@\6@\u01d9\n@\r@\16@\u01da\3@\3@\3A\3A\3\u01cf\2B\3\3\5\4"+
		"\7\5\t\6\13\7\r\b\17\t\21\n\23\13\25\f\27\r\31\16\33\17\35\20\37\21!\22"+
		"#\23%\24\'\25)\26+\27-\30/\31\61\32\63\33\65\34\67\359\36;\37= ?!A\"C"+
		"#E$G%I&K\'M(O)Q*S+U,W-Y.[/]\60_\61a\62c\63e\64g\65i\66k\67m8o9q:s;u<w"+
		"=y>{?}@\177A\u0081B\3\2\t\3\2$$\4\2--//\5\2\'\',,\61\61\4\2C\\c|\6\2\62"+
		";C\\aac|\4\2\f\f\17\17\5\2\13\f\16\17\"\"\u01ee\2\3\3\2\2\2\2\5\3\2\2"+
		"\2\2\7\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21"+
		"\3\2\2\2\2\23\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2"+
		"\2\2\2\35\3\2\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3"+
		"\2\2\2\2)\3\2\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3"+
		"\2\2\2\2\65\3\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3"+
		"\2\2\2\2A\3\2\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2"+
		"\2\2M\3\2\2\2\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2"+
		"Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3\2\2\2\2c\3\2\2\2\2e\3"+
		"\2\2\2\2g\3\2\2\2\2i\3\2\2\2\2k\3\2\2\2\2m\3\2\2\2\2o\3\2\2\2\2q\3\2\2"+
		"\2\2s\3\2\2\2\2u\3\2\2\2\2w\3\2\2\2\2y\3\2\2\2\2{\3\2\2\2\2}\3\2\2\2\2"+
		"\177\3\2\2\2\2\u0081\3\2\2\2\3\u0083\3\2\2\2\5\u008b\3\2\2\2\7\u008d\3"+
		"\2\2\2\t\u008f\3\2\2\2\13\u0095\3\2\2\2\r\u009d\3\2\2\2\17\u00a7\3\2\2"+
		"\2\21\u00b2\3\2\2\2\23\u00b4\3\2\2\2\25\u00b9\3\2\2\2\27\u00bb\3\2\2\2"+
		"\31\u00bd\3\2\2\2\33\u00bf\3\2\2\2\35\u00c9\3\2\2\2\37\u00cb\3\2\2\2!"+
		"\u00cd\3\2\2\2#\u00d4\3\2\2\2%\u00dc\3\2\2\2\'\u00e0\3\2\2\2)\u00e7\3"+
		"\2\2\2+\u00ec\3\2\2\2-\u00f3\3\2\2\2/\u00f6\3\2\2\2\61\u00f9\3\2\2\2\63"+
		"\u00fc\3\2\2\2\65\u00ff\3\2\2\2\67\u0101\3\2\2\29\u0104\3\2\2\2;\u0109"+
		"\3\2\2\2=\u010d\3\2\2\2?\u010f\3\2\2\2A\u0115\3\2\2\2C\u0118\3\2\2\2E"+
		"\u012f\3\2\2\2G\u0138\3\2\2\2I\u014a\3\2\2\2K\u014c\3\2\2\2M\u0153\3\2"+
		"\2\2O\u0158\3\2\2\2Q\u0160\3\2\2\2S\u0166\3\2\2\2U\u016f\3\2\2\2W\u0176"+
		"\3\2\2\2Y\u017f\3\2\2\2[\u0183\3\2\2\2]\u0189\3\2\2\2_\u018e\3\2\2\2a"+
		"\u0194\3\2\2\2c\u0196\3\2\2\2e\u019c\3\2\2\2g\u019e\3\2\2\2i\u01a1\3\2"+
		"\2\2k\u01a3\3\2\2\2m\u01a5\3\2\2\2o\u01a7\3\2\2\2q\u01a9\3\2\2\2s\u01ab"+
		"\3\2\2\2u\u01ad\3\2\2\2w\u01b3\3\2\2\2y\u01b6\3\2\2\2{\u01be\3\2\2\2}"+
		"\u01c9\3\2\2\2\177\u01d8\3\2\2\2\u0081\u01de\3\2\2\2\u0083\u0084\7e\2"+
		"\2\u0084\u0085\7q\2\2\u0085\u0086\7p\2\2\u0086\u0087\7v\2\2\u0087\u0088"+
		"\7g\2\2\u0088\u0089\7z\2\2\u0089\u008a\7v\2\2\u008a\4\3\2\2\2\u008b\u008c"+
		"\7}\2\2\u008c\6\3\2\2\2\u008d\u008e\7\177\2\2\u008e\b\3\2\2\2\u008f\u0090"+
		"\7e\2\2\u0090\u0091\7n\2\2\u0091\u0092\7c\2\2\u0092\u0093\7u\2\2\u0093"+
		"\u0094\7u\2\2\u0094\n\3\2\2\2\u0095\u0096\7g\2\2\u0096\u0097\7z\2\2\u0097"+
		"\u0098\7v\2\2\u0098\u0099\7g\2\2\u0099\u009a\7p\2\2\u009a\u009b\7f\2\2"+
		"\u009b\u009c\7u\2\2\u009c\f\3\2\2\2\u009d\u009e\7k\2\2\u009e\u009f\7p"+
		"\2\2\u009f\u00a0\7v\2\2\u00a0\u00a1\7g\2\2\u00a1\u00a2\7t\2\2\u00a2\u00a3"+
		"\7h\2\2\u00a3\u00a4\7c\2\2\u00a4\u00a5\7e\2\2\u00a5\u00a6\7g\2\2\u00a6"+
		"\16\3\2\2\2\u00a7\u00a8\7k\2\2\u00a8\u00a9\7o\2\2\u00a9\u00aa\7r\2\2\u00aa"+
		"\u00ab\7n\2\2\u00ab\u00ac\7g\2\2\u00ac\u00ad\7o\2\2\u00ad\u00ae\7g\2\2"+
		"\u00ae\u00af\7p\2\2\u00af\u00b0\7v\2\2\u00b0\u00b1\7u\2\2\u00b1\20\3\2"+
		"\2\2\u00b2\u00b3\7.\2\2\u00b3\22\3\2\2\2\u00b4\u00b5\7t\2\2\u00b5\u00b6"+
		"\7q\2\2\u00b6\u00b7\7n\2\2\u00b7\u00b8\7g\2\2\u00b8\24\3\2\2\2\u00b9\u00ba"+
		"\7]\2\2\u00ba\26\3\2\2\2\u00bb\u00bc\7_\2\2\u00bc\30\3\2\2\2\u00bd\u00be"+
		"\7=\2\2\u00be\32\3\2\2\2\u00bf\u00c0\7u\2\2\u00c0\u00c1\7v\2\2\u00c1\u00c2"+
		"\7c\2\2\u00c2\u00c3\7i\2\2\u00c3\u00c4\7g\2\2\u00c4\u00c5\7r\2\2\u00c5"+
		"\u00c6\7t\2\2\u00c6\u00c7\7q\2\2\u00c7\u00c8\7r\2\2\u00c8\34\3\2\2\2\u00c9"+
		"\u00ca\7*\2\2\u00ca\36\3\2\2\2\u00cb\u00cc\7+\2\2\u00cc \3\2\2\2\u00cd"+
		"\u00ce\7r\2\2\u00ce\u00cf\7w\2\2\u00cf\u00d0\7d\2\2\u00d0\u00d1\7n\2\2"+
		"\u00d1\u00d2\7k\2\2\u00d2\u00d3\7e\2\2\u00d3\"\3\2\2\2\u00d4\u00d5\7r"+
		"\2\2\u00d5\u00d6\7t\2\2\u00d6\u00d7\7k\2\2\u00d7\u00d8\7x\2\2\u00d8\u00d9"+
		"\7c\2\2\u00d9\u00da\7v\2\2\u00da\u00db\7g\2\2\u00db$\3\2\2\2\u00dc\u00dd"+
		"\7k\2\2\u00dd\u00de\7p\2\2\u00de\u00df\7v\2\2\u00df&\3\2\2\2\u00e0\u00e1"+
		"\7f\2\2\u00e1\u00e2\7q\2\2\u00e2\u00e3\7w\2\2\u00e3\u00e4\7d\2\2\u00e4"+
		"\u00e5\7n\2\2\u00e5\u00e6\7g\2\2\u00e6(\3\2\2\2\u00e7\u00e8\7e\2\2\u00e8"+
		"\u00e9\7j\2\2\u00e9\u00ea\7c\2\2\u00ea\u00eb\7t\2\2\u00eb*\3\2\2\2\u00ec"+
		"\u00ed\7U\2\2\u00ed\u00ee\7v\2\2\u00ee\u00ef\7t\2\2\u00ef\u00f0\7k\2\2"+
		"\u00f0\u00f1\7p\2\2\u00f1\u00f2\7i\2\2\u00f2,\3\2\2\2\u00f3\u00f4\7#\2"+
		"\2\u00f4\u00f5\7?\2\2\u00f5.\3\2\2\2\u00f6\u00f7\7?\2\2\u00f7\u00f8\7"+
		"?\2\2\u00f8\60\3\2\2\2\u00f9\u00fa\7@\2\2\u00fa\u00fb\7?\2\2\u00fb\62"+
		"\3\2\2\2\u00fc\u00fd\7>\2\2\u00fd\u00fe\7?\2\2\u00fe\64\3\2\2\2\u00ff"+
		"\u0100\7\60\2\2\u0100\66\3\2\2\2\u0101\u0102\7k\2\2\u0102\u0103\7h\2\2"+
		"\u01038\3\2\2\2\u0104\u0105\7g\2\2\u0105\u0106\7n\2\2\u0106\u0107\7u\2"+
		"\2\u0107\u0108\7g\2\2\u0108:\3\2\2\2\u0109\u010a\7h\2\2\u010a\u010b\7"+
		"q\2\2\u010b\u010c\7t\2\2\u010c<\3\2\2\2\u010d\u010e\7<\2\2\u010e>\3\2"+
		"\2\2\u010f\u0110\7y\2\2\u0110\u0111\7j\2\2\u0111\u0112\7k\2\2\u0112\u0113"+
		"\7n\2\2\u0113\u0114\7g\2\2\u0114@\3\2\2\2\u0115\u0116\7f\2\2\u0116\u0117"+
		"\7q\2\2\u0117B\3\2\2\2\u0118\u011e\7$\2\2\u0119\u011d\n\2\2\2\u011a\u011b"+
		"\7^\2\2\u011b\u011d\7$\2\2\u011c\u0119\3\2\2\2\u011c\u011a\3\2\2\2\u011d"+
		"\u0120\3\2\2\2\u011e\u011c\3\2\2\2\u011e\u011f\3\2\2\2\u011f\u0121\3\2"+
		"\2\2\u0120\u011e\3\2\2\2\u0121\u0122\7$\2\2\u0122D\3\2\2\2\u0123\u0125"+
		"\4\63;\2\u0124\u0123\3\2\2\2\u0125\u0126\3\2\2\2\u0126\u0124\3\2\2\2\u0126"+
		"\u0127\3\2\2\2\u0127\u012b\3\2\2\2\u0128\u012a\4\62;\2\u0129\u0128\3\2"+
		"\2\2\u012a\u012d\3\2\2\2\u012b\u0129\3\2\2\2\u012b\u012c\3\2\2\2\u012c"+
		"\u0130\3\2\2\2\u012d\u012b\3\2\2\2\u012e\u0130\7\62\2\2\u012f\u0124\3"+
		"\2\2\2\u012f\u012e\3\2\2\2\u0130F\3\2\2\2\u0131\u0133\4\63;\2\u0132\u0131"+
		"\3\2\2\2\u0133\u0136\3\2\2\2\u0134\u0132\3\2\2\2\u0134\u0135\3\2\2\2\u0135"+
		"\u0139\3\2\2\2\u0136\u0134\3\2\2\2\u0137\u0139\7\62\2\2\u0138\u0134\3"+
		"\2\2\2\u0138\u0137\3\2\2\2\u0139\u013a\3\2\2\2\u013a\u013e\7\60\2\2\u013b"+
		"\u013d\4\62;\2\u013c\u013b\3\2\2\2\u013d\u0140\3\2\2\2\u013e\u013c\3\2"+
		"\2\2\u013e\u013f\3\2\2\2\u013fH\3\2\2\2\u0140\u013e\3\2\2\2\u0141\u0142"+
		"\7v\2\2\u0142\u0143\7t\2\2\u0143\u0144\7w\2\2\u0144\u014b\7g\2\2\u0145"+
		"\u0146\7h\2\2\u0146\u0147\7c\2\2\u0147\u0148\7n\2\2\u0148\u0149\7u\2\2"+
		"\u0149\u014b\7g\2\2\u014a\u0141\3\2\2\2\u014a\u0145\3\2\2\2\u014bJ\3\2"+
		"\2\2\u014c\u014d\7u\2\2\u014d\u014e\7y\2\2\u014e\u014f\7k\2\2\u014f\u0150"+
		"\7v\2\2\u0150\u0151\7e\2\2\u0151\u0152\7j\2\2\u0152L\3\2\2\2\u0153\u0154"+
		"\7e\2\2\u0154\u0155\7c\2\2\u0155\u0156\7u\2\2\u0156\u0157\7g\2\2\u0157"+
		"N\3\2\2\2\u0158\u0159\7f\2\2\u0159\u015a\7g\2\2\u015a\u015b\7h\2\2\u015b"+
		"\u015c\7c\2\2\u015c\u015d\7w\2\2\u015d\u015e\7n\2\2\u015e\u015f\7v\2\2"+
		"\u015fP\3\2\2\2\u0160\u0161\7d\2\2\u0161\u0162\7t\2\2\u0162\u0163\7g\2"+
		"\2\u0163\u0164\7c\2\2\u0164\u0165\7m\2\2\u0165R\3\2\2\2\u0166\u0167\7"+
		"e\2\2\u0167\u0168\7q\2\2\u0168\u0169\7p\2\2\u0169\u016a\7v\2\2\u016a\u016b"+
		"\7k\2\2\u016b\u016c\7p\2\2\u016c\u016d\7w\2\2\u016d\u016e\7g\2\2\u016e"+
		"T\3\2\2\2\u016f\u0170\7t\2\2\u0170\u0171\7g\2\2\u0171\u0172\7v\2\2\u0172"+
		"\u0173\7w\2\2\u0173\u0174\7t\2\2\u0174\u0175\7p\2\2\u0175V\3\2\2\2\u0176"+
		"\u0177\7t\2\2\u0177\u0178\7g\2\2\u0178\u0179\7s\2\2\u0179\u017a\7w\2\2"+
		"\u017a\u017b\7k\2\2\u017b\u017c\7t\2\2\u017c\u017d\7g\2\2\u017d\u017e"+
		"\7u\2\2\u017eX\3\2\2\2\u017f\u0180\7p\2\2\u0180\u0181\7g\2\2\u0181\u0182"+
		"\7y\2\2\u0182Z\3\2\2\2\u0183\u0184\7e\2\2\u0184\u0185\7n\2\2\u0185\u0186"+
		"\7q\2\2\u0186\u0187\7p\2\2\u0187\u0188\7g\2\2\u0188\\\3\2\2\2\u0189\u018a"+
		"\7p\2\2\u018a\u018b\7w\2\2\u018b\u018c\7n\2\2\u018c\u018d\7n\2\2\u018d"+
		"^\3\2\2\2\u018e\u018f\7e\2\2\u018f\u0190\7q\2\2\u0190\u0191\7p\2\2\u0191"+
		"\u0192\7u\2\2\u0192\u0193\7v\2\2\u0193`\3\2\2\2\u0194\u0195\7#\2\2\u0195"+
		"b\3\2\2\2\u0196\u0197\7,\2\2\u0197\u0198\7,\2\2\u0198d\3\2\2\2\u0199\u019a"+
		"\7~\2\2\u019a\u019d\7~\2\2\u019b\u019d\7`\2\2\u019c\u0199\3\2\2\2\u019c"+
		"\u019b\3\2\2\2\u019df\3\2\2\2\u019e\u019f\7(\2\2\u019f\u01a0\7(\2\2\u01a0"+
		"h\3\2\2\2\u01a1\u01a2\t\3\2\2\u01a2j\3\2\2\2\u01a3\u01a4\t\4\2\2\u01a4"+
		"l\3\2\2\2\u01a5\u01a6\7/\2\2\u01a6n\3\2\2\2\u01a7\u01a8\7-\2\2\u01a8p"+
		"\3\2\2\2\u01a9\u01aa\7>\2\2\u01aar\3\2\2\2\u01ab\u01ac\7@\2\2\u01act\3"+
		"\2\2\2\u01ad\u01ae\7#\2\2\u01aev\3\2\2\2\u01af\u01b0\7-\2\2\u01b0\u01b4"+
		"\7-\2\2\u01b1\u01b2\7/\2\2\u01b2\u01b4\7/\2\2\u01b3\u01af\3\2\2\2\u01b3"+
		"\u01b1\3\2\2\2\u01b4x\3\2\2\2\u01b5\u01b7\t\5\2\2\u01b6\u01b5\3\2\2\2"+
		"\u01b7\u01bb\3\2\2\2\u01b8\u01ba\t\6\2\2\u01b9\u01b8\3\2\2\2\u01ba\u01bd"+
		"\3\2\2\2\u01bb\u01b9\3\2\2\2\u01bb\u01bc\3\2\2\2\u01bcz\3\2\2\2\u01bd"+
		"\u01bb\3\2\2\2\u01be\u01bf\7\61\2\2\u01bf\u01c0\7\61\2\2\u01c0\u01c4\3"+
		"\2\2\2\u01c1\u01c3\n\7\2\2\u01c2\u01c1\3\2\2\2\u01c3\u01c6\3\2\2\2\u01c4"+
		"\u01c2\3\2\2\2\u01c4\u01c5\3\2\2\2\u01c5\u01c7\3\2\2\2\u01c6\u01c4\3\2"+
		"\2\2\u01c7\u01c8\b>\2\2\u01c8|\3\2\2\2\u01c9\u01ca\7\61\2\2\u01ca\u01cb"+
		"\7,\2\2\u01cb\u01cf\3\2\2\2\u01cc\u01ce\13\2\2\2\u01cd\u01cc\3\2\2\2\u01ce"+
		"\u01d1\3\2\2\2\u01cf\u01d0\3\2\2\2\u01cf\u01cd\3\2\2\2\u01d0\u01d2\3\2"+
		"\2\2\u01d1\u01cf\3\2\2\2\u01d2\u01d3\7,\2\2\u01d3\u01d4\7\61\2\2\u01d4"+
		"\u01d5\3\2\2\2\u01d5\u01d6\b?\2\2\u01d6~\3\2\2\2\u01d7\u01d9\t\b\2\2\u01d8"+
		"\u01d7\3\2\2\2\u01d9\u01da\3\2\2\2\u01da\u01d8\3\2\2\2\u01da\u01db\3\2"+
		"\2\2\u01db\u01dc\3\2\2\2\u01dc\u01dd\b@\2\2\u01dd\u0080\3\2\2\2\u01de"+
		"\u01df\7?\2\2\u01df\u0082\3\2\2\2\24\2\u011c\u011e\u0126\u012b\u012f\u0134"+
		"\u0138\u013e\u014a\u019c\u01b3\u01b6\u01b9\u01bb\u01c4\u01cf\u01da\3\2"+
		"\3\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}